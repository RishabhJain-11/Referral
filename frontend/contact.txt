/* eslint-disable no-unused-vars */
import { Form, redirect, useActionData } from "react-router-dom"
import emailjs from "@emailjs/browser";
import { useRef } from "react";
import styled from "styled-components";

export default function Contact() {
    const data = useActionData();
    const form = useRef();
    const sendEmail = (e) => {
        e.preventDefault();

        emailjs
            .sendForm(
                "service_taq1rpr",
                "template_4w8mrrl",
                form.current,
                "uI7mPuVqtuyZfp30g"
            )
            .then(
                (result) => {
                    console.log(result.text);
                    console.log("message sent");
                },
                (error) => {
                    console.log(error.text);
                }
            );
    };
    return (
        <StyledContactForm>
            <form ref={form} onSubmit={sendEmail}>
                <label>Name</label>
                <input type="text" name="user_name" />
                <label>Email</label>
                <input type="email" name="user_email" />
                <label>Message</label>
                <textarea name="message" />
                <input type="submit" value="Send" />
            </form>
        </StyledContactForm>
    );
}

export const contactAction = async ({ request }) => {
    const data = await request.formData()

    const submission = {
        email: data.get('email'),
        message: data.get('message')
    }

    console.log(submission)

    // send your post request

    if (submission.message.length < 10) {
        return { error: 'Message must be over 10 chars long.' }
    }

    // redirect the user
    return redirect('/')
}

const StyledContactForm = styled.div`
  width: 400px;
  form {
    display: flex;
    align-items: flex-start;
    flex-direction: column;
    width: 100%;
    font-size: 16px;
    input {
      width: 100%;
      height: 35px;
      color: black;
      padding: 7px;
      outline: none;
      border-radius: 5px;
      border: 1px solid rgb(220, 220, 220);
      &:focus {
        border: 2px solid rgba(0, 206, 158, 1);
      }
    }
    textarea {
      max-width: 100%;
      min-width: 100%;
      width: 100%;
      max-height: 100px;
      min-height: 100px;
      padding: 7px;
      outline: none;
      color:black;
      border-radius: 5px;
      border: 1px solid rgb(220, 220, 220);
      &:focus {
        border: 2px solid rgba(0, 206, 158, 1);
      }
    }
    label {
      margin-top: 1rem;
    }
    input[type="submit"] {
      margin-top: 2rem;
      cursor: pointer;
      background: rgb(249, 105, 14);
      color: white;
      border: none;
    }
  }
`;